class Solution {
public:
    bool searchnext(vector<vector<char>>& board,string word,int row,int col,int index,int n,int m){
        if(index==word.length())return true;
        if(row<0||col<0||row==n||col==m||board[row][col]!=word[index]|| board[row][col]=='!') return false;
        char c=board[row][col];
        board[row][col]='!';
        bool top=searchnext(board,word,row-1,col,index+1,n,m);
        bool down=searchnext(board,word,row+1,col,index+1,n,m);
        bool right=searchnext(board,word,row,col+1,index+1,n,m);
        bool left=searchnext(board,word,row,col-1,index+1,n,m);
        board[row][col]=c;

        return top||down||right||left;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int n=board.size();
        int m=board[0].size();
        int index=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j]==word[index]){
                    if(searchnext(board,word,i,j,index,n,m))
                    return true;
                }
            }
        }
        return false;
    }
};
